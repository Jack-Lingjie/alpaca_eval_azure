执行参数: uf_llama3.1_instruct_dpo_2048_trible
WARNING 09-22 05:33:14 arg_utils.py:766] Chunked prefill is enabled by default for models with max_model_len > 32K. Currently, chunked prefill might not work with some features or models. If you encounter any issues, please disable chunked prefill by setting --enable-chunked-prefill=False.
INFO 09-22 05:33:14 config.py:820] Chunked prefill is enabled with max_num_batched_tokens=512.
INFO 09-22 05:33:14 llm_engine.py:174] Initializing an LLM engine (v0.5.4) with config: model='/mnt/lingjiejiang/textual_aesthetics/model_checkpoint/sft_merge_checkpoints/uf_llama3.1_instruct_dpo_2048_trible', speculative_config=None, tokenizer='/mnt/lingjiejiang/textual_aesthetics/model_checkpoint/sft_merge_checkpoints/uf_llama3.1_instruct_dpo_2048_trible', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, rope_scaling=None, rope_theta=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=131072, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='outlines'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None), seed=0, served_model_name=/mnt/lingjiejiang/textual_aesthetics/model_checkpoint/sft_merge_checkpoints/uf_llama3.1_instruct_dpo_2048_trible, use_v2_block_manager=False, enable_prefix_caching=False)
INFO 09-22 05:33:21 model_runner.py:720] Starting to load model /mnt/lingjiejiang/textual_aesthetics/model_checkpoint/sft_merge_checkpoints/uf_llama3.1_instruct_dpo_2048_trible...
INFO 09-22 05:33:50 model_runner.py:732] Loading model weights took 14.9888 GB
INFO 09-22 05:33:51 gpu_executor.py:102] # GPU blocks: 28232, # CPU blocks: 2048
INFO 09-22 05:33:53 model_runner.py:1024] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 09-22 05:33:53 model_runner.py:1028] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 09-22 05:34:02 model_runner.py:1225] Graph capturing finished in 9 secs.
model name: uf_llama3.1_instruct_dpo_2048_trible
model_path: /mnt/lingjiejiang/textual_aesthetics/model_checkpoint/sft_merge_checkpoints/uf_llama3.1_instruct_dpo_2048_trible
use original template
